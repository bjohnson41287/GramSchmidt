################################################################################
# File: Makefile.libs
#
# Author: $Format:%an
#
# Date: %Format:%cD$
# Date Created: Saturday October 25, 2014
#
# Description: Generic Makefile for library code
################################################################################

#
# Define "make" system variables
#
# See the GNU Make Manual for a full description of these variables
#
MAKEFLAGS += -r

#
# Local source, header, and object file names
#
CCSOURCE := $(strip $(wildcard *.cc))
HEADERS  := $(call headerFiles,$(LOCAL_HEADER_DIR))
OBJS := $(addprefix $(LOCAL_OBJ_DIR)/,$(call objNames,$(CCSOURCE)))

#
# Library targets
#
.PHONY: all configure clobber clean distclean

all: local_all
ifneq ($(OBJS),)
	@$(LN) $(LIB_NAME_PATH) $(DEST_LIB_PATH)/$(LIB_NAME)
endif

configure: local_configure
ifneq ($(HEADERS),)
	@for file in $(HEADERS); do \
		$(LN) $(LOCAL_HEADER_DIR)/$$file $(DEST_HEADER_PATH)/$$file; \
	done
endif

ifneq ($(OBJS),)
	@if [ ! -f $(LIB_TGTS_FILE) ]; then \
		echo "#" > $(LIB_TGTS_FILE); \
		echo "# Library targets" >> $(LIB_TGTS_FILE); \
		echo "#" >> $(LIB_TGTS_FILE); \
	fi

	@if [ -z "`grep $(LIB_BASE) $(LIB_TGTS_FILE)`" ]; then \
		printf "%s\n" "$(LIB_BASE):" >> $(LIB_TGTS_FILE); \
		printf "\t%s\n" "\$$(MAKE) -C $(CURDIR) all" >> $(LIB_TGTS_FILE); \
	fi
endif

clobber:
	@if [ -d $(LOCAL_OBJ_DIR) ]; then \
		$(RM) $(LOCAL_OBJ_DIR); \
	fi
	@if [ -d $(LOCAL_LIB_DIR) ]; then \
		$(RM) $(LOCAL_LIB_DIR); \
	fi

clean: clobber
	@if [ -d $(LIB_TGTS_PATH) ]; then \
		$(RM) $(LIB_TGTS_PATH); \
	fi

distclean: clean
	@if [ -d $(DEST_HEADER_PATH) ]; then \
		for file in $(HEADERS); do \
			$(RM) $(DEST_HEADER_PATH)/$(notdir $$file); \
		done; \
		if [ `$(LS) -1 $(DEST_HEADER_PATH) | wc -w` -eq 0 ]; then \
			$(RM) $(DEST_HEADER_PATH); \
		fi \
	fi
ifneq ($(LIB_NAME),)
	@if [ -d $(DEST_LIB_PATH) ]; then \
		$(RM) $(DEST_LIB_PATH)/$(LIB_NAME); \
		if [ `$(LS) -1 $(DEST_LIB_PATH) | wc -w` -eq 0 ]; then \
			$(RM) $(DEST_LIB_PATH); \
		fi; \
	fi
endif

$(LOCAL_LIB_DIR)/$(LIB_BASE).a: $(OBJS)
ifneq ($(OBJS),)
	@if [ ! -d $(LOCAL_LIB_DIR) ]; then \
		$(MKDIR) $(LOCAL_LIB_DIR); \
	fi
	$(AR) $(ARFLAGS) $@ $(OBJS)
endif

#
# Generic Makefile targets
#
include $(PROJ_ROOT_PATH)/$(STD_MAKE_PATH)/targets.std

#
# Library targets
#
-include $(LIB_TGTS_FILE)

# End Makefile.libs
